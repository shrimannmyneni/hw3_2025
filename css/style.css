/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */




/* FIX in any areas to fix */

/*<class>:<state> for class, state in *MODE* */
nav a:hover, nav a:focus {
     text-decoration: underline;
 }
 
 
 
 /* Step 2a: Write selector/rule property to position the default position for the skip class element*/
 
 /* The link is positioned 40px above the top of its parent element (it is hidden by default).
 When the link is in focus it is positioned 20px below the top of its parent (so it is visible only when in focus.) */
 .skip a{
      position: absolute; /*relative to parent*/
      top: -40px;
 }
 /* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/
 .skip a:focus{
      top: 20px; /*relative to parent*/
 }
 
 
 /* Step 3: Write selector/rule property to style all elements when in focus*/
 :focus{
      border: 2px solid;
 }





/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/


     




/* Step 4: Write selector/rule property to style the container */
.container{
     display: grid;
     grid-template-columns: 1fr 5fr 1fr;
     row-gap: 15px;
}

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */
.container > *:first-child{
     grid-column: 1 / -1;   /*Take up  all of the columns*/

     /* Use the header.jpg file as a non-repeating background image with parallax effect */
     background-image: url("../images/header.jpg");
     background-repeat: no-repeat;
     background-attachment: fixed;
      
}

/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */
 .about {
     grid-column: 2 / span 1;
     grid-row: 2 / 3;
 }
 
 .method {
     grid-column: 2 / span 1;
     grid-row: 3 / 4;
 }
 
 .clients {
     grid-column: 2 / span 1;
     grid-row: 4 / 5;
 }
 
 .contact {
     grid-column: 2 / span 1;
     grid-row: 5 / 6;
 }

 .about-image{
     max-height: 600px;
     grid-column: 1 / -1;
     overflow: hidden;
     grid-row-start:2
 }

.method-image{
     max-height: 600px;
     grid-column: 1 / -1;
     overflow: hidden;
     grid-row-start: 3;
 }

  .clients-image{
     max-height: 600px;
     grid-column: 1 / -1;
     overflow: hidden;
     grid-row-start: 4;
 }

.contact-image{
     max-height: 600px;
     grid-column: 1 / -1;
     overflow: hidden;
     grid-row-start: 5;
 }

      /*This will be a lot of rules.... but be strategic and combine seletors*/


 /* Step 8: Write the selector/rule property to style the .text-block class. */
 /*Is centered horizontally and vertically with centered text.*/
 .text-block{
     align-self: center;
     text-align: center;
     overflow: auto;
 }

 .text-block p{
     text-align: center;
     overflow: auto;
 }






/* Add your media query here */

@media screen and (min-width: 800px){
  /* Step 9: Write the selector/rule property to style the nav element */

     nav{
          width: 100%;
          padding: 30px 0;
     }

     nav ul{
          text-align: right;
     }
  /* Step 10: Write the selector/rule property to update the .container class */

  .container {
     display: grid;
     grid-template-columns: 50px auto 500px auto 50px;
     column-gap: 20px;
 }



  /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/

     .about, .clients, .method-image, .contact-image{
          grid-column: 3 / span 2;
     }



     .method, .contact, .about-image, .clients-image {
          grid-column: 2 / span 2;
     }

 /* Step 13:Write the selector/rule property to update the .text-block class */

     .text-block{
          max-height: 250px;
          overflow-y: auto;
     }
}



 






